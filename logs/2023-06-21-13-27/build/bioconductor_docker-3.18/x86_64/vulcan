+ Rscript -e 'Sys.setenv(BIOCONDUCTOR_USE_CONTAINER_REPOSITORY=FALSE); p <- .libPaths(); p <- c('\''/tmp/tmp/built'\'', p); .libPaths(p); if(BiocManager::install('\''vulcan'\'', INSTALL_opts = '\''--build'\'', update = TRUE, quiet = FALSE, dependencies=TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
'getOption("repos")' replaces Bioconductor standard repositories, see
'help("repositories", package = "BiocManager")' for details.
Replacement repositories:
    CRAN: https://cloud.r-project.org
Bioconductor version 3.18 (BiocManager 1.30.21), R 4.3.0 (2023-04-21)
Installing package(s) 'vulcan'
also installing the dependencies ‘VennDiagram’, ‘ChIPpeakAnno’, ‘wordcloud’, ‘vulcandata’

trying URL 'https://cloud.r-project.org/src/contrib/VennDiagram_1.7.3.tar.gz'
Content type 'application/x-gzip' length 78508 bytes (76 KB)
==================================================
downloaded 76 KB

trying URL 'https://bioconductor.org/packages/3.18/bioc/src/contrib/ChIPpeakAnno_3.35.1.tar.gz'
Content type 'application/x-gzip' length 19312307 bytes (18.4 MB)
==================================================
downloaded 18.4 MB

trying URL 'https://cloud.r-project.org/src/contrib/wordcloud_2.6.tar.gz'
Content type 'application/x-gzip' length 42454 bytes (41 KB)
==================================================
downloaded 41 KB

trying URL 'https://bioconductor.org/packages/3.18/data/experiment/src/contrib/vulcandata_1.23.0.tar.gz'
Content type 'application/x-gzip' length 46807497 bytes (44.6 MB)
==================================================
downloaded 44.6 MB

trying URL 'https://bioconductor.org/packages/3.18/bioc/src/contrib/vulcan_1.23.0.tar.gz'
Content type 'application/x-gzip' length 258287 bytes (252 KB)
==================================================
downloaded 252 KB

* installing *source* package ‘VennDiagram’ ...
** package ‘VennDiagram’ successfully unpacked and MD5 sums checked
** using staged installation
** R
** data
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘VennDiagram’ as ‘VennDiagram_1.7.3_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (VennDiagram)
* installing *source* package ‘wordcloud’ ...
** package ‘wordcloud’ successfully unpacked and MD5 sums checked
** using staged installation
** libs
using C++ compiler: ‘g++ (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0’
g++ -std=gnu++17 -I"/usr/local/lib/R/include" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c RcppExports.cpp -o RcppExports.o
g++ -std=gnu++17 -I"/usr/local/lib/R/include" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c layout.cpp -o layout.o
g++ -std=gnu++17 -shared -L/usr/local/lib/R/lib -L/usr/local/lib -o wordcloud.so RcppExports.o layout.o -L/usr/local/lib/R/lib -lR
installing to /tmp/tmp/built/00LOCK-wordcloud/00new/wordcloud/libs
** R
** data
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘wordcloud’ as ‘wordcloud_2.6_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (wordcloud)
* installing *source* package ‘vulcandata’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘vulcandata’ as ‘vulcandata_1.23.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (vulcandata)
* installing *source* package ‘ChIPpeakAnno’ ...
** using staged installation
** R
** data
*** moving datasets to lazyload DB
** inst
** byte-compile and prepare package for lazy loading
in method for ‘annoGR’ with signature ‘"EnsDb"’: no definition for class “EnsDb”
in method for ‘toGRanges’ with signature ‘"EnsDb"’: no definition for class “EnsDb”
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘ChIPpeakAnno’ as ‘ChIPpeakAnno_3.35.1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (ChIPpeakAnno)
* installing *source* package ‘vulcan’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘vulcan’ as ‘vulcan_1.23.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (vulcan)

The downloaded source packages are in
	‘/tmp/Rtmpm6gSYr/downloaded_packages’
Old packages: 'edgeR', 'GenomeInfoDb', 'systemPipeR', 'class', 'KernSmooth',
  'MASS', 'Matrix', 'nnet'

real	3m46.149s
user	3m28.648s
sys	0m10.844s
* installing *source* package ‘vulcandata’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘vulcandata’ as ‘vulcandata_1.23.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (vulcandata)
